diff --git a/se_information/src/Form/InformationForm.php b/se_information/src/Form/InformationForm.php
index 3df1bfd..3d13a7b 100644
--- a/se_information/src/Form/InformationForm.php
+++ b/se_information/src/Form/InformationForm.php
@@ -46,7 +46,7 @@ class InformationForm extends ContentEntityForm {
       $entity->setNewRevision();
 
       // If a new revision is created, save the current user as revision author.
-      $entity->setRevisionCreationTime(REQUEST_TIME);
+      $entity->setRevisionCreationTime(\Drupal::time()->getRequestTime());
       $entity->setRevisionUserId(\Drupal::currentUser()->id());
     }
     else {
diff --git a/se_information/src/Form/InformationRevisionRevertForm.php b/se_information/src/Form/InformationRevisionRevertForm.php
index 948c9a6..3cdcc1e 100644
--- a/se_information/src/Form/InformationRevisionRevertForm.php
+++ b/se_information/src/Form/InformationRevisionRevertForm.php
@@ -144,7 +144,7 @@ class InformationRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(InformationInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/se_information/src/Form/InformationRevisionRevertTranslationForm.php b/se_information/src/Form/InformationRevisionRevertTranslationForm.php
index 96bf05c..9396ac5 100644
--- a/se_information/src/Form/InformationRevisionRevertTranslationForm.php
+++ b/se_information/src/Form/InformationRevisionRevertTranslationForm.php
@@ -109,7 +109,7 @@ class InformationRevisionRevertTranslationForm extends InformationRevisionRevert
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/se_item/src/Form/ItemForm.php b/se_item/src/Form/ItemForm.php
index 10ed823..0147692 100644
--- a/se_item/src/Form/ItemForm.php
+++ b/se_item/src/Form/ItemForm.php
@@ -44,7 +44,7 @@ class ItemForm extends ContentEntityForm {
       $entity->setNewRevision();
 
       // If a new revision is created, save the current user as revision author.
-      $entity->setRevisionCreationTime(REQUEST_TIME);
+      $entity->setRevisionCreationTime(\Drupal::time()->getRequestTime());
       $entity->setRevisionUserId(\Drupal::currentUser()->id());
     }
     else {
diff --git a/se_item/src/Form/ItemRevisionRevertForm.php b/se_item/src/Form/ItemRevisionRevertForm.php
index dc47bec..941eba3 100644
--- a/se_item/src/Form/ItemRevisionRevertForm.php
+++ b/se_item/src/Form/ItemRevisionRevertForm.php
@@ -144,7 +144,7 @@ class ItemRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(ItemInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/se_item/src/Form/ItemRevisionRevertTranslationForm.php b/se_item/src/Form/ItemRevisionRevertTranslationForm.php
index 7e24dac..ab977ae 100644
--- a/se_item/src/Form/ItemRevisionRevertTranslationForm.php
+++ b/se_item/src/Form/ItemRevisionRevertTranslationForm.php
@@ -109,7 +109,7 @@ class ItemRevisionRevertTranslationForm extends ItemRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/se_item/src/Service/Item.php b/se_item/src/Service/Item.php
index 65d4a9f..94188af 100644
--- a/se_item/src/Service/Item.php
+++ b/se_item/src/Service/Item.php
@@ -5,9 +5,6 @@ namespace Drupal\se_item\Service;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 
-/**
- *
- */
 class Item {
   use StringTranslationTrait;
 
@@ -18,16 +15,10 @@ class Item {
    */
   protected $entityTypeManager;
 
-  /**
-   *
-   */
   public function __construct(EntityTypeManagerInterface $entityTypeManager) {
     $this->entityTypeManager = $entityTypeManager;
   }
 
-  /**
-   *
-   */
   public function findByCode($code) {
     $result = \Drupal::entityQuery('se_item')
       ->condition('status', 1)
diff --git a/se_report/src/Controller/OverviewPageController.php b/se_report/src/Controller/OverviewPageController.php
index 9222a52..3270260 100644
--- a/se_report/src/Controller/OverviewPageController.php
+++ b/se_report/src/Controller/OverviewPageController.php
@@ -7,22 +7,13 @@ namespace Drupal\se_report\Controller;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\se_report\ReportUtilityTrait;
 
-/**
- *
- */
 class OverviewPageController extends ControllerBase {
   use ReportUtilityTrait;
 
-  /**
-   *
-   */
   protected function getModuleName() {
     return 'report_overview_page';
   }
 
-  /**
-   *
-   */
   public function dashboard() {
     $monthly_statistics = $this->monthlyStatistics();
 
@@ -31,9 +22,6 @@ class OverviewPageController extends ControllerBase {
     ];
   }
 
-  /**
-   *
-   */
   private function monthlyStatistics() {
     if (!$block = \Drupal::service('plugin.manager.block')
       ->createInstance('monthly_statistics', [])
diff --git a/se_subscription/src/Controller/SubscriptionController.php b/se_subscription/src/Controller/SubscriptionController.php
index c1c6350..bc7af0e 100644
--- a/se_subscription/src/Controller/SubscriptionController.php
+++ b/se_subscription/src/Controller/SubscriptionController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\se_subscription\Controller;
 
+use Drupal\Core\Link;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Datetime\DateFormatter;
@@ -134,7 +135,7 @@ class SubscriptionController extends ControllerBase implements ContainerInjectio
         // Use revision link to link to revisions that are not active.
         $date = $this->dateFormatter->format($revision->getRevisionCreationTime(), 'short');
         if ($vid != $se_subscription->getRevisionId()) {
-          $link = \Drupal\Core\Link::fromTextAndUrl($date, new Url('entity.se_subscription.revision', [
+          $link = Link::fromTextAndUrl($date, new Url('entity.se_subscription.revision', [
             'se_subscription' => $se_subscription->id(),
             'se_subscription_revision' => $vid,
           ]));
diff --git a/se_subscription/src/Form/SubscriptionRevisionRevertForm.php b/se_subscription/src/Form/SubscriptionRevisionRevertForm.php
index 1462fca..93b3fb2 100644
--- a/se_subscription/src/Form/SubscriptionRevisionRevertForm.php
+++ b/se_subscription/src/Form/SubscriptionRevisionRevertForm.php
@@ -145,7 +145,7 @@ class SubscriptionRevisionRevertForm extends ConfirmFormBase {
   protected function prepareRevertedRevision(SubscriptionInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/se_subscription/src/Form/SubscriptionRevisionRevertTranslationForm.php b/se_subscription/src/Form/SubscriptionRevisionRevertTranslationForm.php
index da67ece..9fa7a24 100644
--- a/se_subscription/src/Form/SubscriptionRevisionRevertTranslationForm.php
+++ b/se_subscription/src/Form/SubscriptionRevisionRevertTranslationForm.php
@@ -110,7 +110,7 @@ class SubscriptionRevisionRevertTranslationForm extends SubscriptionRevisionReve
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
